on:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '!.github/workflows/main.yml'

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-musl
            name: x86_64-linux
            os: ubuntu-latest
            packages: musl-tools
          - target: x86_64-pc-windows-msvc
            name: x86_64-windows
            os: windows-latest
            ext: .exe
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get update && sudo apt-get install -y ${{ matrix.packages }}
        if: matrix.packages

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-tokenizer
          path: target/${{ matrix.target }}/release/tokenizer${{ matrix.ext }}
  publish:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v4
        with:
          name: x86_64-windows-tokenizer
          path: windows
      - uses: actions/download-artifact@v4
        with:
          name: x86_64-linux-tokenizer
          path: linux
      - name: Rename
        run: |
          mv windows/tokenizer.exe windows-tokenizer.exe
          mv linux/tokenizer linux-tokenizer
          chmod +x linux-tokenizer
      - name: Extract Release Version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        shell: bash
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
      - name: Release Notes
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: echo v${{ steps.get_version.outputs.version }} > notes-${{ steps.get_version.outputs.version }}.md
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: tokenizer v${{ steps.get_version.outputs.version }}
          body_path: notes-${{ steps.get_version.outputs.version }}.md
          files: |
            linux-tokenizer
            windows-tokenizer.exe
